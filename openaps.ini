[device "pump"]
vendor = openaps.vendors.medtronic
extra = pump.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "iob"]
vendor = openaps.vendors.process
extra = iob.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[device "pebble"]
vendor = openaps.vendors.process
extra = pebble.ini

[device "ns-upload"]
vendor = openaps.vendors.process
extra = ns-upload.ini

[device "azure-upload"]
vendor = openaps.vendors.process
extra = azure-upload.ini

[report "monitor/glucose.json"]
device = cgm
count = 5
use = iter_glucose
reporter = JSON

[report "model.json"]
device = pump
use = model
reporter = JSON

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/pumphistory.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
reporter = text
clock = monitor/clock.json
json_default = True
pumphistory = monitor/pumphistory.json
device = iob
remainder = []

[report "settings/insulin_sensitivies.json"]
device = pump
use = read_insulin_sensitivies
reporter = JSON

[report "settings/basal_profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
max_iob = max_iob.json
device = get-profile
remainder = []
isf = settings/insulin_sensitivies.json

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = []
iob = monitor/iob.json
glucose = monitor/glucose.json

[report "enact/enacted.json"]
device = pump
input = enact/suggested.json
use = set_temp_basal
reporter = JSON

[report "upload/pebble.json"]
suggested = enact/suggested.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
basal_profile = settings/basal_profile.json
json_default = True
device = pebble
glucose = monitor/glucose.json
remainder = []
iob = monitor/iob.json
enacted = enact/enacted.json

[alias]
invoke = report invoke
preflight = ! bash -c "rm  -f model.json &&  openaps report invoke model.json && test -n $(json -f model.json) && echo \"PREFLIGHT OK\" || ( mm-stick warmup fail \"NO PUMP MODEL RESPONDED\" || mm-stick fail \"NO MEDTRONIC CARELINK STICK AVAILABLE\"; sudo oref0-reset-usb)"

